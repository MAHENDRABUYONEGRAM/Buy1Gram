---
import { Image } from "astro:assets"
import { Left, Right } from "./icons"
import Image1 from "../assets/caraousel-images/PARTNER-1.jpg"
import Image2 from "../assets/caraousel-images/PARTNER-2.png"
import Image3 from "../assets/caraousel-images/PARTNER-3.png"
import Image4 from "../assets/caraousel-images/PARTNER-4.png"
---

<section id="default-carousel" class="relative w-full z-0">
  <button
    id="data-carousel-prev"
    type="button"
    class="absolute top-1/2 -translate-y-1/2 left-1 z-30 p-4 cursor-pointer rounded-full bg-black/20 hover:bg-black/50 focus:outline-none"
    title="previous"
  >
    <Left class="h-[1.5em]" />
  </button>
  <div class="relative overflow-hidden h-[80vh]">
    <div
      id="data-carousel-item-1"
      class="hidden h-full duration-700 ease-in-out"
    >
      <Image
        class="h-full w-full object-cover object-center"
        src={Image1}
        alt=""
      />
    </div>
    <div
      id="data-carousel-item-2"
      class="hidden h-full duration-700 ease-in-out"
    >
      <Image
        class="h-full w-full object-cover object-center"
        src={Image2}
        alt=""
      />
    </div>
    <div
      id="data-carousel-item-3"
      class="hidden h-full duration-700 ease-in-out"
    >
      <Image
        class="h-full w-full object-cover object-center"
        src={Image3}
        alt=""
      />
    </div>
    <div
      id="data-carousel-item-4"
      class="hidden h-full duration-700 ease-in-out"
    >
      <Image
        class="h-full w-full object-cover object-center"
        src={Image4}
        alt=""
      />
    </div>
  </div>
  <div class="absolute z-30 flex space-x-3 -translate-x-1/2 bottom-5 left-1/2">
    <button
      id="data-carousel-indicator-1"
      type="button"
      class="w-3 h-3 rounded-full"></button>
    <button
      id="data-carousel-indicator-2"
      type="button"
      class="w-3 h-3 rounded-full"></button>
    <button
      id="data-carousel-indicator-3"
      type="button"
      class="w-3 h-3 rounded-full"></button>
    <button
      id="data-carousel-indicator-4"
      type="button"
      class="w-3 h-3 rounded-full"></button>
  </div>
  <button
    id="data-carousel-next"
    type="button"
    class="absolute top-1/2 -translate-y-1/2 right-1 z-30 p-4 rounded-full cursor-pointer bg-black/20 hover:bg-black/50 focus:outline-none"
    title="next"
  >
    <Right class="h-[1.5em]" />
  </button>
</section>

<script>
  import { Carousel } from "flowbite"
  import type {
    CarouselItem,
    CarouselOptions,
    CarouselInterface,
  } from "flowbite"

  const items: CarouselItem[] = [
    {
      position: 0,
      el: document.getElementById("data-carousel-item-1")!,
    },
    {
      position: 1,
      el: document.getElementById("data-carousel-item-2")!,
    },
    {
      position: 2,
      el: document.getElementById("data-carousel-item-3")!,
    },
    {
      position: 3,
      el: document.getElementById("data-carousel-item-4")!,
    },
  ]

  const options: CarouselOptions = {
    defaultPosition: 0,
    interval: 3000,
    indicators: {
      activeClasses: "bg-white dark:bg-gray-800",
      inactiveClasses:
        "bg-white/50 dark:bg-gray-800/50 hover:bg-white dark:hover:bg-gray-800",
      items: [
        {
          position: 0,
          el: document.getElementById("data-carousel-indicator-1")!,
        },
        {
          position: 1,
          el: document.getElementById("data-carousel-indicator-2")!,
        },
        {
          position: 2,
          el: document.getElementById("data-carousel-indicator-3")!,
        },
        {
          position: 3,
          el: document.getElementById("data-carousel-indicator-4")!,
        },
      ],
    },
  }

  const carousel: CarouselInterface = new Carousel(items, options)
  carousel.cycle()

  const carouselComponent = document.getElementById("default-carousel")!
  carouselComponent.addEventListener("mouseover", () => carousel.pause())
  carouselComponent.addEventListener("mouseout", () => carousel.cycle())
  carouselComponent.addEventListener("click", () => {
    function handleKeyDown(event: KeyboardEvent) {
      carousel.pause()
      if (event.key === "ArrowLeft") carousel.prev()
      else if (event.key === "ArrowRight") carousel.next()
    }
    document.addEventListener("keydown", handleKeyDown)
    document.addEventListener("click", function handleClickOutSide(event) {
      if (!carouselComponent.contains(event.target as Node)) {
        document.removeEventListener("keydown", handleKeyDown)
        document.removeEventListener("click", handleClickOutSide)
        carousel.cycle()
      }
    })
  })

  const $prevButton = document.getElementById("data-carousel-prev")!
  const $nextButton = document.getElementById("data-carousel-next")!

  $prevButton.addEventListener("click", () => carousel.prev())
  $nextButton.addEventListener("click", () => carousel.next())
</script>
